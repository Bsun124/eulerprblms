import numpy

                                                ##Solutions to Euler's Problems##
                                                
"""1 - If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000."""
total=0
for i in range(1000):
    if i%3 == 0 or i%5 == 0:
        total=total+i
print(total)

"""2 - Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms."""
total = 0
firstvalue = 1
secondvalue = 1
sum = 0

while sum <= 4000000:
    if sum % 2 == 0:
        total += sum
    firstvalue = secondvalue
    secondvalue = sum
    sum = firstvalue + secondvalue

print(total)

"""3 - The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?"""
largenumber = 112123123412345
iteration = 2
while iteration * iteration < largenumber:
    while largenumber % iteration == 0:
        largenumber = largenumber / iteration
    iteration = iteration + 1

print(largenumber)

